<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.totalAdmin">

	<select id="getAdminInfo" resultType="TotalAdminDTO" parameterType="TotalAdminDTO">
		SELECT	SEQ 			AS seq
			 , ID				AS id
			 , NAME				AS name
			 , AUTH_CODE		AS authCode
			 , MEMBER_TYPE		AS memberType
			 , MEMBER_STATUS	AS memberStatus
			 , USE_YN			AS useYn
		FROM	itkey_dev.member
		WHERE 	ID = #{id}
		  AND	PASSWORD = #{password}
		  AND	USE_YN = 'Y'
	</select>

	<!-- gnb메뉴 리스트 -->
	<select id="getGnbMenuListAjax" resultType="commonDTO">
		/*fn : gnb메뉴 리스트 - getGnbMenuList */
		SELECT A.MENU_SEQ AS menuSeq
			 , A.MENU_SITE AS menuSite
			 , A.MENU_NAME AS menuName
			 , A.MENU_LEVEL AS menuLevel
			 , A.MENU_ORDER AS menuOrder
			 , A.MENU_USE_YN AS menuUseYn
			 , A.MENU_TYPE AS menuType
			 , A.MENU_URL AS menuUrl
			 , A.MENU_CONN_WAY AS menuConnWay
			 , A.MENU_DESC AS menuDesc
		FROM	MENU A
		WHERE	A.MENU_LEVEL = 1
		  AND 	A.MENU_SITE = 'A'
		  AND		A.MENU_USE_YN = 'Y'
		ORDER BY A.MENU_ORDER
	</select>

	<select id="selectBoardTypeList" resultType="Board">
		SELECT	itb.ADMIN_BOARD_NUMBER  		AS adminBoardNumber
			 ,me.MENU_NAME as menuName
			 ,itb.BOARD_TYPE as boardType
			 ,(select count(itb.BOARD_TYPE)
			   from itkey_dev.board itb
			   where itb.BOARD_TYPE = me.MENU_BOARD_TYPE
				 and itb.BOARD_DEL_YN='N')AS boardTypeCnt
			 ,me.MENU_SITE
			 ,me.MENU_BOARD_TYPE
			 ,me.MENU_TYPE
		FROM 	menu me
					left join itkey_dev.board itb on me.MENU_BOARD_TYPE = itb.BOARD_TYPE
		WHERE me.MENU_USE_YN = 'Y'
		  and me.MENU_SITE  = 'U'
		GROUP BY 	me.MENU_BOARD_TYPE
		ORDER BY 	itb.ADMIN_BOARD_NUMBER asc
	</select>

	<select id="selectBoardList" resultType="Board">
		SELECT
			BOARD_SEQ				AS boardSeq
			 , BOARD_TYPE			AS boardType
			 , BOARD_TITLE			AS boardTitle
			 , BOARD_CONTENT		AS boardContent
			 , BOARD_SECRET_YN		AS boardSecretYn
			 , BOARD_DEL_YN			AS boardDelYn
			 , INQ_CNT				AS inqCnt
			 , REG_ID				AS regId
			 , REG_NM				AS regNm
			 , REG_DT				AS regDt
			 , UPD_ID				AS updId
			 , UPD_NM				AS updNm
			 , UPD_DT				AS updDt
			 , BOARD_CATEGORY		AS boardCategory
		FROM BOARD
	</select>

	<!-- 메뉴 리스트 -->
	<select id="getMenuListAjax" resultType="menuDTO">
		/*fn : 메뉴 리스트 - getMenuListAjax */
		SELECT A.MENU_SEQ AS menuSeq
			 , A.MENU_SITE AS menuSite
			 , A.MENU_NAME AS menuName
			 , A.MENU_PARENT_SEQ AS menuParentSeq
			 , A.MENU_LEVEL AS menuLevel
			 , A.MENU_ORDER AS menuOrder
			 , A.MENU_USE_YN AS menuUseYn
			 , A.MENU_TYPE AS menuType
			 , A.MENU_URL AS menuUrl
			 , A.MENU_CONN_WAY AS menuConnWay
			 , A.MENU_DESC AS menuDesc
			 , A.MENU_PARENT_SEQ AS menuParentSeq
			 , A.MENU_BOARD_TYPE AS menuBoardType
			 , A.REG_ID AS regId
			 , A.UPD_DT AS updDt
		FROM	MENU A
		WHERE	A.MENU_USE_YN = 'Y'
		AND		A.MENU_SITE = 'U'
		AND 	A.MENU_LEVEL = '1'
		ORDER BY A.MENU_LEVEL, A.MENU_PARENT_SEQ, CAST(A.MENU_ORDER AS SIGNED)
	</select>

	<!-- 메뉴 수 -->
	<select id="getMenuListCntAjax" resultType="int">
		/*fn : 메뉴 수 - getMenuListCntAjax */
		SELECT 	count(*)
		FROM	MENU
	</select>

	<!-- 메뉴 등록/수정 -->
	<insert id="updMenuMgmtAjax" parameterType="MenuEntity">
		/*fn : 메뉴 등록/수정 - getMenuListCntAjax */
		INSERT INTO MENU (
			MENU_SEQ,
			MENU_SITE,
			MENU_NAME,
			MENU_LEVEL,
			MENU_TYPE,
			MENU_URL,
			MENU_PARENT_SEQ,
			REG_ID,
			REG_DT,
			MENU_USE_YN,
			MENU_ORDER,
			MENU_BOARD_TYPE
		) VALUES
		<foreach collection="list" item="menu" separator=",">
			(
			#{menu.menuSeq},
			#{menu.menuSite},
			#{menu.menuName},
			#{menu.menuLevel},
			#{menu.menuType},
			#{menu.menuUrl},
			#{menu.menuParentSeq},
			'ADMIN',
			NOW(),
			#{menu.menuUseYn},
			#{menu.menuOrder},
			#{menu.menuBoardType}
			)
		</foreach>
		ON DUPLICATE KEY UPDATE
		MENU_SITE = VALUES(MENU_SITE),
		MENU_NAME = VALUES(MENU_NAME),
		MENU_LEVEL = VALUES(MENU_LEVEL),
		MENU_TYPE = VALUES(MENU_TYPE),
		MENU_URL = VALUES(MENU_URL),
		MENU_PARENT_SEQ = VALUES(MENU_PARENT_SEQ),
		MENU_USE_YN = VALUES(MENU_USE_YN),
		MENU_ORDER = VALUES(MENU_ORDER),
		MENU_BOARD_TYPE  = VALUES(MENU_BOARD_TYPE)
	</insert>

	<!-- 메뉴 삭제시, 해당 게시글 삭제처리 -->
	<update id="delBoardAjax" parameterType="java.util.List">
		/*fn : 메뉴 삭제시, 해당 게시글 삭제처리 - delBoardAjax */
		UPDATE BOARD
		SET BOARD_DEL_YN = 'Y'
		WHERE BOARD_TYPE IN
		<foreach collection="list" item="menu" open="(" separator="," close=")">
			#{menu.delMenuBoardType}
		</foreach>
	</update>

<!--	/**
	*
	*
	*
	*@author 김재섭
	*@date 2023-11-23
	*@comment 관리자 배너 리스트
	*
	**/-->
	<select id="getBannerList" resultType="Banner">
		SELECT
			BANNER_SEQ
			 , BANNER_NAME
			 , BANNER_PARENT_SEQ
			 , BANNER_LEVEL
			 , BANNER_ORDER
			 , BANNER_USE_YN
			 , BANNER_TYPE
			 , BANNER_URL
			 , BANNER_CONN_WAY
			 , BANNER_DESC
			 , BN.FILE_IDX
			 , REG_ID
			 , BN.REG_DT
			 , UPD_ID
			 , UPD_NM
			 , UPD_DT
			 , FT.ori_nm
			 , FT.save_nm
			 , FT.FILE_PATH
		FROM BANNER BN
		LEFT JOIN FILE FT ON BN.FILE_IDX = FT.FILE_IDX
		ORDER BY BANNER_ORDER ASC
	</select>

	<!--/**
	*
	*
	*
	*@author 김재섭
	*@date 2023-11-23
	*@comment 관리자 배너 등록
	*
	**/-->
	<insert id="saveBanner" parameterType="Banner">
		INSERT INTO BANNER
		(BANNER_NAME
		, BANNER_PARENT_SEQ
		, BANNER_LEVEL
		, BANNER_ORDER
		, BANNER_USE_YN
		, BANNER_TYPE
		, BANNER_URL
		, BANNER_CONN_WAY
		, BANNER_DESC
		, FILE_IDX
		, REG_ID
		, REG_DT
		)
		VALUES
		( #{bannerName}
		, #{bannerParentSeq}
		, #{bannerLevel}
		, #{bannerOrder}
		, #{bannerUseYn}
		, #{bannerType}
		, #{bannerUrl}
		, #{bannerConnWay}
		, #{bannerDesc}
		, #{fileIdx}
		, #{regId}
		, NOW()
		)
	</insert>

	<!--/**
	*
	*
	*
	*@author 김재섭
	*@date 2023-11-23
	*@comment 관리자 배너 파일등록
	*
	**/-->
	<insert id="saveFile" parameterType="FileDto" useGeneratedKeys="true" keyProperty="fileIdx" keyColumn="file_idx">
		INSERT INTO FILE
		(
		 ORI_NM
		, SAVE_NM
		, FILE_PATH
		, REG_DT
		)
		VALUES
			( #{oriNm}
			, #{saveNm}
			, #{filePath}
			, NOW()
			)
	</insert>

	<!--/**
	*
	*
	*
	*@author 김재섭
	*@date 2023-11-23
	*@comment 관리자 배너 파일 수정
	*
	**/-->
	<update id="updateFile" parameterType="FileDto" useGeneratedKeys="true" keyProperty="fileIdx" keyColumn="file_idx">
		UPDATE FILE
		SET
			ORI_NM = #{oriNm}
		  , SAVE_NM = #{saveNm}
		  , FILE_PATH = #{filePath}
		  , REG_DT = NOW()
		WHERE FILE_IDX = #{fileIdx}
	</update>

	<!--/**
	*
	*
	*
	*@author 김재섭
	*@date 2023-11-23
	*@comment 관리자 배너 수정
	*
	**/-->
	<update id="updateBanner" parameterType="Banner">
		UPDATE BANNER
		SET
			BANNER_NAME = #{bannerName}
		  , BANNER_PARENT_SEQ = #{bannerParentSeq}
		  , BANNER_LEVEL = #{bannerLevel}
		  , BANNER_ORDER = #{bannerOrder}
		  , BANNER_USE_YN = #{bannerUseYn}
		  , BANNER_TYPE = #{bannerType}
		  , BANNER_URL = #{bannerUrl}
			<if test="fileIdx     !=null and fileIdx  !=''">,FILE_IDX = #{fileIdx}</if>
		  , BANNER_CONN_WAY = #{bannerConnWay}
		  , BANNER_DESC = #{bannerDesc}
		  , UPD_DT = NOW()
		WHERE BANNER_SEQ = #{bannerSeq}
	</update>

	<!--관리자 리스트 -->
	<select id="adminList" resultType="Admin">
		select @ROWNUM:=@ROWNUM+1 as ROWNUM
		,  SEQ
		, ID
		, M.NAME
		, MEMBER_TYPE
		, AUTH_CODE
		, MEMBER_STATUS
		, EMAIL
		, REG_DT
		, UPD_DT
		, UPD_NM
		, REG_NM
		, WHDWL_YMD
		from itkey_dev.`member` M
		where (@ROWNUM:=0)=0
		<include refid="search"></include>
		and USE_YN = 'Y'
		order by ROWNUM DESC
	</select>

	<!-- 관리자 카운트-->
	<select id="countAdmin" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			MEMBER
		WHERE
			USE_YN ='Y';
	</select>

	<!-- 관리자 추가 -->
	<insert id="insertAdmin" parameterType="Admin">
		INSERT INTO MEMBER(ID, PASSWORD, NAME, HP, EMAIL, MEMBER_TYPE, AUTH_CODE, MEMBER_STATUS, USE_YN, REG_ID, REG_NM, REG_DT)
		VALUES (#{id}, #{password}, #{name}, #{hp}, #{email}, #{memberType}, #{authCode}, #{memberStatus}, 'Y', #{regId}, #{regNm}, now());
	</insert>
	<!-- 관리자 아이디 중복 체크-->
	<select id="adminIdCheck" parameterType="String" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			MEMBER
		WHERE
			ID = #{id}
	</select>
	<!-- 로그인 유저 정보 가져오기 -->
	<select id="getLoginInfo" parameterType="_int" resultType="TotalAdminDTO">
		SELECT *
		FROM
			MEMBER
		WHERE
			SEQ = #{adminIdx}
	</select>

	<!-- 관리자 Y>N 변경(탈퇴) -->
	<update id="deleteAdmin" parameterType="Admin">
		UPDATE
		MEMBER
		<trim prefix="SET" prefixOverrides=",">
			<if test="updId       !=null and updId    !=''">, UPD_ID = #{updId} </if>
			<if test="updNm       !=null and updNm   !=''">, UPD_NM = #{updNm}</if>
		</trim>
		,USE_YN = 'N'
		,WHDWL_YMD = NOW()

		WHERE
		SEQ = #{seq}
	</update>

	<!--관리자 정보 수정 -->
	<update id="updateAdmin" parameterType="Admin">
		UPDATE
		MEMBER
		<trim prefix="SET" prefixOverrides=",">
			<if test="password        !=null and password    !=''">PASSWORD = #{password}</if>
			<if test="hp         !=null and hp     !=''">,HP = #{hp}</if>
			<if test="email         !=null and email     !=''">,EMAIL = #{email}</if>
			<if test="memberType         !=null and memberType     !=''">,MEMBER_TYPE = #{memberType}</if>
			<if test="memberStatus         !=null and memberStatus     !=''">,MEMBER_STATUS = #{memberStatus}</if>
			<if test="useYn        !=null and useYn     !=''"> USE_YN = 'N'</if>
			<if test="updId       !=null and updId    !=''">, UPD_ID = #{updId}</if>
			<if test="updNm       !=null and updNm   !=''">, UPD_NM = #{updNm}</if>
		</trim>
		,UPD_DT = NOW()
		WHERE
		SEQ = #{seq}
	</update>

	<!--탈퇴 관리자 리스트(useYN:N) -->
	<select id="del_adminList" resultType="Admin">
		select @ROWNUM:=@ROWNUM+1 as ROWNUM, a.*
		from (select
		 		  SEQ
				, ID
				, M.NAME
				, MEMBER_TYPE
				, MEMBER_STATUS
				, EMAIL
				, REG_DT
				, UPD_DT
				, UPD_NM
				, REG_NM
				, WHDWL_YMD
			from itkey_dev.`member` M
			where USE_YN = 'N'
			<include refid="search"></include>
			order by WHDWL_YMD asc
			) a
		where (@ROWNUM:=0)=0
		order by ROWNUM desc
	</select>

	<!--탈퇴 관리자 카운트 -->
	<select id="countDelAdmin" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			MEMBER
		WHERE
			USE_YN ='N';
	</select>

	<!--탈퇴자 복귀 -->
	<update id="returnAdmin" parameterType="Admin">
		UPDATE
		MEMBER
		<trim prefix="SET" prefixOverrides=",">
			<if test="updId       !=null and updId    !=''">, UPD_ID = #{updId} </if>
			<if test="updNm       !=null and updNm   !=''">, UPD_NM = #{updNm}</if>
		</trim>
		,USE_YN = 'Y'
		,WHDWL_YMD = null
		WHERE
		SEQ = #{seq}
	</update>

	<!-- 영구 탈퇴 -->
	<delete id="realDeleteAdmin" parameterType="_int">
		DELETE
		FROM
			MEMBER
		WHERE
			SEQ = #{adminIdx}
	</delete>

	<!--회원 차단-->
	<update id="blockMember" parameterType="Member">
		UPDATE
		MEMBER
		<trim prefix="SET" prefixOverrides=",">
			<if test="updId       !=null and updId   !=''">, UPD_ID = #{updId}</if>
			<if test="blockRsn       !=null and blockRsn   !=''">, BLOCK_RSN = #{blockRsn}</if>
		</trim>
		, MEMBER_STATUS = 'B'
		, BLOCK_YMD = now()
		WHERE
		SEQ = #{seq}
	</update>

	<!--회원 차단 풀기-->
	<update id ="releaseMember" parameterType="_int">
		UPDATE
			MEMBER
		SET
			MEMBER_STATUS = null
		  , BLOCK_RSN = null
		  , BLOCK_YMD = null
		WHERE
			SEQ = #{memberIdx}
	</update>

	<!-- 차단 회원 카운트 -->
	<select id="countBlockAdmin" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			MEMBER
		WHERE
			MEMBER_STATUS ='B';
	</select>

	<!-- 차단 회원 리스트 -->
	<select id="block_adminList" resultType="Member">
		select @ROWNUM:=@ROWNUM+1 as ROWNUM, a.*
		from (select SEQ
				, ID
				, M.NAME
				, MEMBER_TYPE
				, MEMBER_STATUS
				, EMAIL
				, UPD_DT
				, UPD_ID
				, BLOCK_RSN
				, BLOCK_YMD
			from itkey_dev.`member` M
			where USE_YN = 'Y'
			<include refid="search"></include>
			and MEMBER_STATUS = 'B'
			order by BLOCK_YMD asc
			) a
		where (@ROWNUM:=0)=0
		order by ROWNUM desc
	</select>

	<!-- 검색 기능 -->
	<sql id="search">
		<choose>
			<when test="type == 'all'">
				AND (M.NAME LIKE CONCAT('%',#{keyword},'%')
				OR  M.ID LIKE CONCAT('%',#{keyword},'%'))
				AND  M.NAME  IS NOT NULL
			</when>
			<when test="type == 'name'">
				AND M.NAME LIKE CONCAT('%',#{keyword},'%')
			</when>
			<when test="type == 'id'">
				AND M.ID LIKE CONCAT('%',#{keyword},'%')
			</when>
		</choose>
	</sql>

	<delete id="removeBanner" parameterType="Banner">
		DELETE FROM BANNER
		WHERE BANNER_SEQ = #{bannerSeq}
	</delete>

	<!-- 디자인 조회 -->
	<select id="getDesignList" resultType="DesignDTO">
		/*fn : 디자인 조회 - getDesignList */
		SELECT
			design_seq
		     , type
			 , content
		FROM DESIGN
	</select>

	<!-- 디자인 수정 -->
	<update id="upDatedesignMgmt" parameterType="DesignEntity">
		/*fn : 디자인 수정 - upDatedesignMgmt */
		UPDATE DESIGN
		SET CONTENT = #{content}
		WHERE DESIGN_SEQ = #{designSeq}
	</update>

</mapper>