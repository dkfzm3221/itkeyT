<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.member">

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 사용자 회원 가입
    *
    **/-->
    <insert id="memJoin" parameterType="Member">
        INSERT INTO MEMBER(ID, PASSWORD, NAME, HP, EMAIL, MEMBER_TYPE, USE_YN, REG_DT, AUTH_CODE, SALT)
        VALUES (#{id}, #{password}, #{name}, #{hp}, #{email}, #{memberType}, 'Y', now(), #{authCode}, #{salt});
    </insert>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 사용자 SALT 가져오기
    *
    **/-->
    <select id="getSalt" parameterType="Member" resultType="String">
        SELECT SALT
        FROM MEMBER
        WHERE ID = #{id}
    </select>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 사용자 로그인
    *
    **/-->
    <select id="memLogin" parameterType="Member" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE ID = #{id}
          AND PASSWORD = #{password}
    </select>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 로그인 사용자 정보 불러오기
    *
    **/-->
    <select id="memLoginInfo" parameterType="Member" resultType="MemberInfoResponse">
        SELECT ID
                , SEQ
                , EMAIL
                , HP
                , NAME
                , AUTH_CODE
                , MEMBER_STATUS
                , MEMBER_TYPE
                , USE_YN
                , SALT
        FROM
                MEMBER
        WHERE ID = #{id}
          AND PASSWORD = #{password}
    </select>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 아이디 찾기
    *
    **/-->
    <select id="findId" parameterType="Member" resultType="Member">
        SELECT
            CONCAT(SUBSTRING(id, 1, LENGTH(id) - 3), '***') as ID, NAME
        FROM
            MEMBER
        WHERE
            NAME = #{name}
        AND
            HP = #{hp}
    </select>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 비밀번호 찾기
    *
    **/-->
    <select id="findPw" parameterType="Member" resultType="Member">
        SELECT
            SEQ, ID, NAME, EMAIL, SALT
        FROM
            MEMBER
        WHERE
            Id = #{id}
        AND
            EMAIL = #{email}
        AND
            USE_YN = 'Y'
    </select>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 비밀번호 재발급
    *
    **/-->
    <update id="newPw" parameterType="Member">
        UPDATE
            MEMBER
        SET
            PASSWORD = #{password}
        WHERE
            SEQ = #{seq}
    </update>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 사용자 아이디 중복 체크
    *
    **/-->
    <select id="memberIdCheck" parameterType="String" resultType="_int">
        SELECT
            COUNT(*)
        FROM
            MEMBER
        WHERE
            ID = #{id}
    </select>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 사용자 정보 불러오기
    *
    **/-->
    <select id="memberInfo" parameterType="_int" resultType="Member">
        SELECT ID
             , SEQ
             , EMAIL
             , HP
             , NAME
        FROM
            MEMBER
        WHERE SEQ = #{memberIdx}
    </select>

    <!--/**
    *
    *@author 유은비
    *@date 2023-11-23
    *@comment 사용자 정보 수정
    *
    **/-->
    <update id="updateMember" parameterType="Member">
        UPDATE
            MEMBER
        <trim prefix="SET" prefixOverrides=",">
            <if test="password       !=null and password   !=''">, PASSWORD = #{password}</if>
            <if test="hp       !=null and hp   !=''">, HP = #{hp}</if>
            <if test="email       !=null and email   !=''">, EMAIL = #{email}</if>
        </trim>
        WHERE
        SEQ = #{seq}
    </update>
    <!--/**
    *
    *@author 유은비
    *@date 2023-11-30
    *@comment SNS 로그인
    *
    **/-->
    <select id="getSnsId" parameterType="SNSInfo" resultType="MemberInfoResponse">
        SELECT ID
             , SEQ
             , EMAIL
             , HP
             , NAME
             , AUTH_CODE
             , MEMBER_STATUS
             , MEMBER_TYPE
             , USE_YN
             , SALT
        FROM
            MEMBER
        WHERE SNS_ID = #{snsId}
          AND SNS_CODE = #{snsCode}
    </select>
    <!--/**
      *
      *@author 유은비
      *@date 2023-11-30
      *@comment SNS로 가입
      *
      **/-->
    <insert id="snsJoin" parameterType="MemberInsert">
        INSERT INTO MEMBER(ID, EMAIL, MEMBER_TYPE, USE_YN, REG_DT, MEMBER_STATUS, SNS_ID, SNS_CODE)
        VALUES (#{id} ,#{email}, #{memberType}, 'Y', now(), #{memberStatus}, #{snsId}, #{snsCode});
    </insert>


</mapper>